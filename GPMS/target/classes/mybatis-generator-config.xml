<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 引入配置文件 -->
	<properties resource="mybatis-generator.properties" />
	<!-- 指定数据连接驱动jar地址 -->
	<classPathEntry location="${generator.classPath}" />
	<!-- 一个数据库一个context -->
	<context id="BuildingTables" targetRuntime="Mybatis3"
		defaultModelType="flat">
		<!-- defaultModelType="hierarchical" -->
		<property name="javaFileEncoding" value="UTF-8" />
		<!-- 抑制警告 -->
		<property name="suppressTypeWarnings" value="true" />
		<!-- 这个插件给由MBG生成的Javas添加了java.io.Serializable标记接口。这个插件给实体类增加了serialVersionUID字段。 -->
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
		<!-- 该插件给Example类添加方法（实际上是给Criteria内部类）来支持不区分大小写的LIKE搜索。这表明通过插件给Example类添加功能，而不是扩展这个类。 -->
		<plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin" />
		<!-- 这个插件将添加一个新版本selectByExample方法接受RowBounds参数。这支持的MyBatis RowBounds函数，其中一个返回的结果列表可以在长度受到限制，并且开始位置可以被指定。这可以是在分页应用中是有用的。 
			这个插件仅适用于MyBatis3目标运行时环境。 -->
		<plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" />
		<!-- 该插件给实体类添加toString()方法。 -->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
		<!-- 这个插件在生成的SQL映射中增加了一个<cache>元素。这个插件仅用于MyBatis3目标运行时环境。这个插件接受下列属性。都是可选的，并且，如果指定，则值将被直接传递到相应的属性生成的<cache>元素。 -->
		<plugin type="org.mybatis.generator.plugins.CachePlugin" />
		<!-- 这个插件生成包含对MBG所生成的XML映射文件的框架MapperConfig.xml文件。此文件可用于配置的MyBatis 3.X环境。 -->
		<plugin type="org.mybatis.generator.plugins.MapperConfigPlugin">
			<!-- （可选的）生成的文件的名称。如果没有指定，默认为“MapperConfig.xml”。 -->
			<property name="fileName" value="${generator.mapperConfigFilename}" />
			<!-- （必须的）生成文件放置的包名。指定像“com.mycompany.sql”这样的值。 -->
			<property name="targetPackage" value="${generator.mapperPackage}" />
			<property name="targetProject"
				value="${generator.targetProject}/src/main/resources" />
		</plugin>
		<!-- 这个插件通过重命名由MBG生成的Example类的方法演示initialized方法的用法。 -->
		<plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
			<property name="searchString" value="Example$" />
			<property name="replaceString" value="Criteria" />
		</plugin>

		<!-- 注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="false" /><!-- 是否取消注释 -->
			<property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${jdbc.driverClassName}"
			connectionURL="${jdbc.url}" userId="${jdbc.username}" password="${jdbc.password}" />
		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 -->
		<javaModelGenerator targetPackage="${generator.domainPackage}"
			targetProject="${generator.targetProject}/src/main/java">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="true" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成mapxml文件 -->
		<sqlMapGenerator targetPackage="${generator.mapperPackage}"
			targetProject="${generator.targetProject}/src/main/resources">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 生成mapxml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="${generator.daoPackage}"
			targetProject="${generator.targetProject}/src/main/java" type="XMLMAPPER">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 配置表信息 -->
		<table schema="btms" tableName="man_message" domainObjectName="Message" />

	</context>
</generatorConfiguration>  